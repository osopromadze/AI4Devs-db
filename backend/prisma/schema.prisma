// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(100)
  employees Employee[]
  positions Position[]
}

model Employee {
  id        Int         @id @default(autoincrement())
  companyId Int         @map("company_id")
  name      String      @db.VarChar(100)
  email     String      @db.VarChar(255)
  role      String      @db.VarChar(50)
  isActive  Boolean     @default(true) @map("is_active")
  company   Company     @relation(fields: [companyId], references: [id])
  interviews Interview[]
  
  @@index([companyId])
}

model InterviewFlow {
  id          Int            @id @default(autoincrement())
  description String         @db.VarChar(255)
  steps       InterviewStep[]
  positions   Position[]
}

model InterviewType {
  id          Int            @id @default(autoincrement())
  name        String         @db.VarChar(100)
  description String?        @db.Text
  steps       InterviewStep[]
}

model InterviewStep {
  id              Int           @id @default(autoincrement())
  interviewFlowId Int           @map("interview_flow_id")
  interviewTypeId Int           @map("interview_type_id")
  name            String        @db.VarChar(100)
  orderIndex      Int           @map("order_index")
  interviewFlow   InterviewFlow @relation(fields: [interviewFlowId], references: [id])
  interviewType   InterviewType @relation(fields: [interviewTypeId], references: [id])
  interviews      Interview[]
  
  @@index([interviewFlowId])
  @@index([interviewTypeId])
}

model Position {
  id                 Int           @id @default(autoincrement())
  companyId          Int           @map("company_id")
  interviewFlowId    Int           @map("interview_flow_id")
  title              String        @db.VarChar(100)
  description        String?       @db.Text
  status             String        @db.VarChar(50)
  isVisible          Boolean       @default(true) @map("is_visible")
  location           String        @db.VarChar(100)
  jobDescription     String?       @db.Text @map("job_description")
  requirements       String?       @db.Text
  responsibilities   String?       @db.Text
  salaryMin          Decimal?      @map("salary_min") @db.Decimal(10, 2)
  salaryMax          Decimal?      @map("salary_max") @db.Decimal(10, 2)
  employmentType     String        @db.VarChar(50) @map("employment_type")
  benefits           String?       @db.Text
  companyDescription String?       @db.Text @map("company_description")
  applicationDeadline DateTime?    @map("application_deadline")
  contactInfo        String?       @db.VarChar(255) @map("contact_info")
  company            Company       @relation(fields: [companyId], references: [id])
  interviewFlow      InterviewFlow @relation(fields: [interviewFlowId], references: [id])
  applications       Application[]
  
  @@index([companyId])
  @@index([interviewFlowId])
}

model Candidate {
  id                Int               @id @default(autoincrement())
  firstName         String            @db.VarChar(100)
  lastName          String            @db.VarChar(100)
  email             String            @unique @db.VarChar(255)
  phone             String?           @db.VarChar(15)
  address           String?           @db.VarChar(100)
  educations        Education[]
  workExperiences   WorkExperience[]
  resumes           Resume[]
  applications      Application[]
}

model Application {
  id              Int        @id @default(autoincrement())
  positionId      Int        @map("position_id")
  candidateId     Int        @map("candidate_id")
  applicationDate DateTime   @map("application_date")
  status          String     @db.VarChar(50)
  notes           String?    @db.Text
  position        Position   @relation(fields: [positionId], references: [id])
  candidate       Candidate  @relation(fields: [candidateId], references: [id])
  interviews      Interview[]
  
  @@index([positionId])
  @@index([candidateId])
}

model Interview {
  id              Int           @id @default(autoincrement())
  applicationId   Int           @map("application_id")
  interviewStepId Int           @map("interview_step_id")
  employeeId      Int           @map("employee_id")
  interviewDate   DateTime      @map("interview_date")
  result          String?       @db.VarChar(50)
  score           Int?
  notes           String?       @db.Text
  application     Application   @relation(fields: [applicationId], references: [id])
  interviewStep   InterviewStep @relation(fields: [interviewStepId], references: [id])
  employee        Employee      @relation(fields: [employeeId], references: [id])
  
  @@index([applicationId])
  @@index([interviewStepId])
  @@index([employeeId])
}

model Education {
  id            Int       @id @default(autoincrement())
  institution   String    @db.VarChar(100)
  title         String    @db.VarChar(250)
  startDate     DateTime
  endDate       DateTime?
  candidateId   Int
  candidate     Candidate @relation(fields: [candidateId], references: [id])
  
  @@index([candidateId])
}

model WorkExperience {
  id          Int       @id @default(autoincrement())
  company     String    @db.VarChar(100)
  position    String    @db.VarChar(100)
  description String?   @db.VarChar(200)
  startDate   DateTime
  endDate     DateTime?
  candidateId Int
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  
  @@index([candidateId])
}

model Resume {
  id          Int       @id @default(autoincrement())
  filePath    String    @db.VarChar(500)
  fileType    String    @db.VarChar(50)
  uploadDate  DateTime
  candidateId Int
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  
  @@index([candidateId])
}